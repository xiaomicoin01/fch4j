package org.freecash.domain;

import lombok.AllArgsConstructor;
import lombok.Data;
import lombok.NoArgsConstructor;
import org.hibernate.annotations.Type;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.Id;
import javax.persistence.Table;

/**
 * 应用发布协议(fch_feip15)
 * 
 * @author bianj
 * @version 1.0.0 2020-09-10
 */
@Entity
@Table(name = "fch_feip15")
@AllArgsConstructor
@NoArgsConstructor
@Data
public class Feip15 implements java.io.Serializable {
    /** 版本号 */
    private static final long serialVersionUID = -2243111963502139952L;

    /* This code was generated by TableGo tools, mark 1 begin. */

    /** ID */
    @Id
    @Column(name = "pid", unique = true, nullable = false, length = 255)
    private String pid;

    /** 协议类型 */
    @Column(name = "protocol_type", nullable = true, length = 255)
    private String protocolType;

    /** 协议编号 */
    @Column(name = "protocol_no", nullable = true, length = 255)
    private String protocolNo;

    /** 版本号 */
    @Column(name = "protocol_version", nullable = true, length = 255)
    private String protocolVersion;

    /** 英文名称 */
    @Column(name = "en_name", nullable = true, length = 255)
    private String enName;

    /** 其他名称 */
    @Column(name = "other_name", nullable = true, length = 255)
    private String otherName;

    /** 版本号 */
    @Column(name = "app_version", nullable = true, length = 255)
    private String appVersion;

    /** 创建者 */
    @Column(name = "create_cid", nullable = true, length = 255)
    private String createCid;

    /** 详情 */
    @Column(name = "detail", nullable = true, length = 255)
    private String detail;

    /** 详情 */
    @Column(name = "tag", nullable = true, length = 255)
    private String tag;

    /** 采用协议 */
    @Column(name = "app_protocol", nullable = true, length = 255)
    private String appProtocol;

    /** 应用CID */
    @Column(name = "cid", nullable = true, length = 255)
    private String cid;

    /** 状态 */
    @Column(name = "status", nullable = true, length = 5)
    @Type(type = "org.hibernate.type.NumericBooleanType")
    private boolean status;
}